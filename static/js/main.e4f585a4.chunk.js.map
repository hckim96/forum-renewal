{"version":3,"sources":["components/Header.js","routes/FireworkCanvas.js","routes/Home.js","routes/Write.js","components/PostPreview.js","routes/PostList.js","routes/PostView.js","components/Card.js","components/TimeCounter.js","firebase.js","components/RecordModal.js","routes/MemoryGame.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","exact","activeClassName","FireworkCanvas","useEffect","window","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","mx","my","canvas","document","getElementById","ctx","getContext","cw","innerWidth","ch","innerHeight","fireworks","particles","hue","limiterTick","mousedown","random","min","max","Math","Firework","sx","sy","tx","ty","this","x","y","distanceToTarget","distanceTraveled","coordinates","coordinateCount","push","angle","atan2","speed","acceleration","brightness","targetRadius","Particle","PI","friction","gravity","alpha","decay","width","height","prototype","update","index","pop","unshift","particleCount","createParticles","splice","draw","beginPath","strokeStyle","stroke","arc","cos","sin","moveTo","length","lineTo","addEventListener","e","pageX","offsetLeft","pageY","offsetTop","preventDefault","loop","globalCompositeOperation","fillStyle","fillRect","i","id","Home","style","paddingTop","wordWrap","repeat","sampleBody","String","raw","renderers","code","language","value","xonokai","children","Write","onPostWrite","onPostUpdate","post","post2","useState","title","setTitle","body","setValue","selectedTab","setSelectedTab","history","useHistory","placeholder","type","onChange","target","onTabChange","minEditorHeight","generateMarkdownPreview","markdown","Promise","resolve","onClick","alert","autoFocus","createdAt","Date","now","formatDate","date","d","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","PostPreview","PostList","postView","postList","map","p","marginLeft","marginRight","marginBottom","marginTop","PostView","onPostDelete","justifySelf","cursor","Card","content","flipped","handleClick","matched","isFlipped","flipOnHover","flipDirection","animationDuration","src","process","alt","TimeCounter","started","isFinished","onRestart","writeRecord","startTime","diff","state","setState","intervalRef","useRef","setInterval","current","clearInterval","time","s","toFixed","m","floor","formatTime","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","database","RecordModal","record","getRecords","username","display","handleRecordWrite","updates","ref","key","then","stopPropagation","onKeyDown","MemoryGame","shuffleArr","arr","newArr","slice","rand","generateCards","tmp","cardContent","concat","t","obj","toString","substr","cards","gameTurn","onAnimation","recordList","newRecordList","order","console","log","orderByChild","once","snapshot","forEach","snap","val","find","card","cardsToUpdate","copyCard","justFlippedCard","isMatched","onStart","waitCardId","r","justifyContent","generateRecordComponent","App","setPostList","newPostList","filter","findPostIdx","idx","query","URLSearchParams","useLocation","search","path","render","get","Number","reverse","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename"],"mappings":"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","file":"static/js/main.e4f585a4.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink } from 'react-router-dom'\nimport \"./Header.css\";\n\nexport const Header = () => {\n    return (\n        <div className = \"header-container\">\n            <NavLink to = \"/\" exact = {true} className=\"header-link\" activeClassName = \"header-activeLink\"><span>홈</span></NavLink>\n            <NavLink to = \"/canvas\" className=\"header-link\" activeClassName = \"header-activeLink\"><span>폭죽놀이</span></NavLink>\n            <NavLink to = \"/post\" className=\"header-link\" activeClassName = \"header-activeLink\"><span>포스트리스트</span></NavLink>\n            <NavLink to = \"/write\" className=\"header-link\" activeClassName = \"header-activeLink\"><span>글 쓰기</span></NavLink>\n            <NavLink to = \"/memoryGame\" className=\"header-link\" activeClassName = \"header-activeLink\"><span>카드 게임</span></NavLink>\n        </div>\n    )\n}\n","import React, { useEffect } from 'react'\n\nexport const FireworkCanvas = () => {\n    \n    useEffect(() => {\n        \n        // when animating on canvas, it is best to use requestAnimationFrame instead of setTimeout or setInterval\n        // not supported in all browsers though and sometimes needs a prefix, so we need a shim\n        window.requestAnimFrame= ( function() {\n            return window.requestAnimationFrame ||\n                        window.webkitRequestAnimationFrame ||\n                        window.mozRequestAnimationFrame ||\n                        function( callback ) {\n                            window.setTimeout( callback, 1000 / 60 );\n                        };\n        })();\n        \n        // now we will setup our basic variables for the demo\n        var canvas = document.getElementById( 'canvas' ),\n                ctx = canvas.getContext( '2d' ),\n                // full screen dimensions\n                cw = window.innerWidth,\n                ch = window.innerHeight,\n                // firework collection\n                fireworks = [],\n                // particle collection\n                particles = [],\n                // starting hue\n                hue = 120,\n                // when launching fireworks with a click, too many get launched at once without a limiter, one launch per 5 loop ticks\n                limiterTotal = 5,\n                limiterTick = 0,\n                // this will time the auto launches of fireworks, one launch per 80 loop ticks\n                // timerTotal = 80,\n                // timerTick = 0,\n                mousedown = false,\n                // mouse x coordinate,\n                mx,\n                // mouse y coordinate\n                my;\n        // set canvas dimensions\n        canvas.width = cw;\n        canvas.height = ch;\n        \n        // now we are going to setup our function placeholders for the entire demo\n        \n        // get a random number within a range\n        function random( min, max ) {\n            return Math.random() * ( max - min ) + min;\n        }\n        \n        // calculate the distance between two points\n        // function calculateDistance( p1x, p1y, p2x, p2y ) {\n        //     var xDistance = p1x - p2x,\n        //             yDistance = p1y - p2y;\n        //     return Math.sqrt( Math.pow( xDistance, 2 ) + Math.pow( yDistance, 2 ) );\n        // }\n        \n        // create firework\n        function Firework( sx, sy, tx, ty ) {\n            // actual coordinates\n            this.x = sx;\n            this.y = sy;\n            // starting coordinates\n            this.sx = sx;\n            this.sy = sy;\n            // target coordinates\n            this.tx = tx;\n            this.ty = ty;\n            // distance from starting point to target\n            this.distanceToTarget = 0;\n            this.distanceTraveled = 0;\n            // track the past coordinates of each firework to create a trail effect, increase the coordinate count to create more prominent trails\n            this.coordinates = [];\n            this.coordinateCount = 3;\n            // populate initial coordinate collection with the current coordinates\n            while( this.coordinateCount-- ) {\n                this.coordinates.push( [ this.x, this.y ] );\n            }\n            this.angle = Math.atan2( ty - sy, tx - sx );\n            this.speed = 2;\n            this.acceleration = 1.05;\n            this.brightness = random( 50, 70 );\n            // circle target indicator radius\n            this.targetRadius = 1;\n        }\n        \n        // update firework\n        Firework.prototype.update = function( index ) {\n            // remove last item in coordinates array\n            this.coordinates.pop();\n            // add current coordinates to the start of the array\n            this.coordinates.unshift( [ this.x, this.y ] );\n            \n            // cycle the circle target indicator radius\n            if( this.targetRadius < 8 ) {\n                this.targetRadius += 0.3;\n            } else {\n                this.targetRadius = 1;\n            }\n            \n            createParticles( this.tx, this.ty );\n            fireworks.splice( index, 1 );\n\n            // // speed up the firework\n            // this.speed *= this.acceleration;\n            \n            // // get the current velocities based on angle and speed\n            // var vx = Math.cos( this.angle ) * this.speed,\n            //         vy = Math.sin( this.angle ) * this.speed;\n            // // how far will the firework have traveled with velocities applied?\n            // this.distanceTraveled = calculateDistance( this.sx, this.sy, this.x + vx, this.y + vy );\n            \n            // // if the distance traveled, including velocities, is greater than the initial distance to the target, then the target has been reached\n            // if( this.distanceTraveled >= this.distanceToTarget ) {\n            //     createParticles( this.tx, this.ty );\n            //     // remove the firework, use the index passed into the update function to determine which to remove\n            //     fireworks.splice( index, 1 );\n            // } else {\n            //     // target not reached, keep traveling\n            //     this.x += vx;\n            //     this.y += vy;\n            // }\n        }\n        \n        // draw firework\n        Firework.prototype.draw = function() {\n            ctx.beginPath();\n            // move to the last tracked coordinate in the set, then draw a line to the current x and y\n            // ctx.moveTo( this.coordinates[ this.coordinates.length - 1][ 0 ], this.coordinates[ this.coordinates.length - 1][ 1 ] );\n            // ctx.lineTo( this.x, this.y );\n            ctx.strokeStyle = 'hsl(' + hue + ', 100%, ' + this.brightness + '%)';\n            ctx.stroke();\n            \n            ctx.beginPath();\n            // draw the target for this firework with a pulsing circle\n            ctx.arc( this.tx, this.ty, this.targetRadius, 0, Math.PI * 2 );\n            ctx.stroke();\n        }\n        \n        // create particle\n        function Particle( x, y ) {\n            this.x = x;\n            this.y = y;\n            // track the past coordinates of each particle to create a trail effect, increase the coordinate count to create more prominent trails\n            this.coordinates = [];\n            this.coordinateCount = 5;\n            while( this.coordinateCount-- ) {\n                this.coordinates.push( [ this.x, this.y ] );\n            }\n            // set a random angle in all possible directions, in radians\n            this.angle = random( 0, Math.PI * 2 );\n            this.speed = random( 1, 10 );\n            // friction will slow the particle down\n            this.friction = 0.95;\n            // gravity will be applied and pull the particle down\n            this.gravity = 1;\n            // set the hue to a random number +-50 of the overall hue variable\n            this.hue = random( hue - 50, hue + 50 );\n            this.brightness = random( 50, 80 );\n            this.alpha = 1;\n            // set how fast the particle fades out\n            this.decay = random( 0.015, 0.03 );\n        }\n        \n        // update particle\n        Particle.prototype.update = function( index ) {\n            // remove last item in coordinates array\n            this.coordinates.pop();\n            // add current coordinates to the start of the array\n            this.coordinates.unshift( [ this.x, this.y ] );\n            // slow down the particle\n            this.speed *= this.friction;\n            // apply velocity\n            this.x += Math.cos( this.angle ) * this.speed;\n            this.y += Math.sin( this.angle ) * this.speed + this.gravity;\n            // fade out the particle\n            this.alpha -= this.decay;\n            \n            // remove the particle once the alpha is low enough, based on the passed in index\n            if( this.alpha <= this.decay ) {\n                particles.splice( index, 1 );\n            }\n        }\n        \n        // draw particle\n        Particle.prototype.draw = function() {\n            ctx.beginPath();\n            // move to the last tracked coordinates in the set, then draw a line to the current x and y\n            ctx.moveTo( this.coordinates[ this.coordinates.length - 1 ][ 0 ], this.coordinates[ this.coordinates.length - 1 ][ 1 ] );\n            ctx.lineTo( this.x, this.y );\n            ctx.strokeStyle = 'hsla(' + this.hue + ', 100%, ' + this.brightness + '%, ' + this.alpha + ')';\n            ctx.stroke();\n        }\n        \n        // create particle group/explosion\n        function createParticles( x, y ) {\n            // increase the particle count for a bigger explosion, beware of the canvas performance hit with the increased particles though\n            var particleCount = 30;\n            while( particleCount-- ) {\n                particles.push( new Particle( x, y ) );\n            }\n        }\n        \n        // main demo loop\n        function loop() {\n            // this function will run endlessly with requestAnimationFrame\n            window.requestAnimFrame( loop );\n            \n            // increase the hue to get different colored fireworks over time\n            //hue += 0.5;\n        \n            // create random color\n            hue= random(0, 360 );\n            \n            // normally, clearRect() would be used to clear the canvas\n            // we want to create a trailing effect though\n            // setting the composite operation to destination-out will allow us to clear the canvas at a specific opacity, rather than wiping it entirely\n\n            // ctx.globalCompositeOperation = 'destination-out';\n            // ctx.fillStyle = \"rgba(0, 0, 0, .3)\";\n            ctx.globalCompositeOperation = 'destination-over';\n            ctx.fillStyle = \"rgba(0, 0, 0, .5)\";\n            \n            // decrease the alpha property to create more prominent trails\n            ctx.fillRect( 0, 0, cw, ch );\n            // change the composite operation back to our main mode\n            // lighter creates bright highlight points as the fireworks and particles overlap each other\n            ctx.globalCompositeOperation = 'lighter';\n            \n            // loop over each firework, draw it, update it\n            var i = fireworks.length;\n            while( i-- ) {\n                fireworks[ i ].draw();\n                fireworks[ i ].update( i );\n            }\n            \n            // loop over each particle, draw it, update it\n            // var i = particles.length;\n            i = particles.length;\n            while( i-- ) {\n                particles[ i ].draw();\n                particles[ i ].update( i );\n            }\n            \n            // launch fireworks automatically to random coordinates, when the mouse isn't down\n            // if( timerTick >= timerTotal ) {\n            //     if( !mousedown ) {\n            //         // start the firework at the bottom middle of the screen, then set the random target coordinates, the random y coordinates will be set within the range of the top half of the screen\n            //         fireworks.push( new Firework( cw / 2, ch, random( 0, cw ), random( 0, ch / 2 ) ) );\n            //         timerTick = 0;\n            //     }\n            // } else {\n            //     timerTick++;\n            // }\n            \n            // limit the rate at which fireworks get launched when mouse is down\n            if( limiterTick >= limiterTotal ) {\n                if( mousedown ) {\n                    // start the firework at the bottom middle of the screen, then set the current mouse coordinates as the target\n                    fireworks.push( new Firework( cw / 2, ch, mx, my ) );\n                    limiterTick = 0;\n                }\n            } else {\n                limiterTick++;\n            }\n        }\n        \n        // mouse event bindings\n        // update the mouse coordinates on mousemove\n        canvas.addEventListener( 'mousemove', function( e ) {\n            mx = e.pageX - canvas.offsetLeft;\n            my = e.pageY - canvas.offsetTop;\n        });\n        \n        // toggle mousedown state and prevent canvas from being selected\n        canvas.addEventListener( 'mousedown', function( e ) {\n            e.preventDefault();\n            mousedown = true;\n        });\n        \n        canvas.addEventListener( 'mouseup', function( e ) {\n            e.preventDefault();\n            mousedown = false;\n        });\n        \n        // once the window loads, we are ready for some fireworks!\n        loop();\n    });\n\n    return (\n        <div>\n            <canvas id = \"canvas\">\n            </canvas>\n\n        </div>\n    )\n}\n\n\n","import React, { useEffect } from 'react'\n\nexport const Home = () => {\n  // useEffect(() => {\n  //   console.log(\"Home Component\");\n  // }, [])\n    return (\n      <div>\n        <div style = {{paddingTop: \"20px\", wordWrap: \"normal\"}}>\n          <h1>{`hello `.repeat(3000)}</h1>\n        </div>\n      </div>\n    )\n}\n","import React, { useState } from 'react'\nimport ReactMde from \"react-mde\";\nimport ReactMarkdown from 'react-markdown'\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport {xonokai} from 'react-syntax-highlighter/dist/esm/styles/prism' // 1\n\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport \"./Write.css\"\nimport { useHistory } from 'react-router-dom';\n\nconst sampleBody = String.raw`**Hello world!!!**\n# 제목1\n1. 1번\n2. 2번\n3. 3번\n## 제목2\n- 하나\n- 둘\n- 셋\n${\"```\"}cpp\n#include <iostream>\nusing namespace std;\nint main() {\n  cout << \"hello, world\\n\";\n}\n${\"```\"}\n\n*Italic*\n> Blockquote\n\n`;\n\nconst renderers = {\n    code: ({language, value}) => {\n      return <SyntaxHighlighter style={xonokai} language= {language} children={value}/>\n    }\n}\n\nexport const Write = ({onPostWrite, onPostUpdate, post}) => {\n\n    let post2 = post ? post : {\"title\" : \"\", \"body\" : sampleBody};\n    const [title, setTitle] = useState(post2.title);\n    const [value, setValue] = useState(post2.body);\n    \n    const [selectedTab, setSelectedTab] = useState(\"write\");\n\n    const history = useHistory();\n    return (\n        <div>\n            {post ?\n            (<div className = \"write-container\">\n                    <input\n                            placeholder = \"제목을 입력하세요...\" \n                            className = \"write-title\" \n                            type=\"text\" value={title} \n                            onChange={e => setTitle(e.target.value)}\n                            />\n                    <ReactMde\n                        className = \"write-mde\"\n                        value={value}\n                        onChange={setValue}\n                        selectedTab={selectedTab}\n                        onTabChange={setSelectedTab}\n                        minEditorHeight = {400}\n                        generateMarkdownPreview={markdown =>\n                            Promise.resolve(<ReactMarkdown renderers={renderers}>{markdown}</ReactMarkdown>)\n                        }\n                        />\n\n                    <button className = \"write-button\"\n                    onClick = {() => {\n                        onPostUpdate({...post2 ,title: title, body: value, id: post2.id});\n                        alert(\"수정되었습니다.\")\n                        history.push(`/post/${post2.id}`);\n                    }} >수정</button>\n            </div>)\n            :\n            (<div className = \"write-container\">\n                    <input autoFocus = {true} \n                            placeholder = \"제목을 입력하세요...\" \n                            className = \"write-title\" \n                            type=\"text\" value={title} \n                            onChange={e => setTitle(e.target.value)}\n                    />\n                    <ReactMde\n                        className = \"write-mde\"\n                        value={value}\n                        onChange={setValue}\n                        selectedTab={selectedTab}\n                        onTabChange={setSelectedTab}\n                        minEditorHeight = {400}\n                        generateMarkdownPreview={markdown =>\n                        Promise.resolve(<ReactMarkdown renderers={renderers}>{markdown}</ReactMarkdown>)\n                        }\n                    />\n\n                    <button className = \"write-button\"\n                    onClick = {() => {\n                        onPostWrite({title: title, body: value, createdAt: Date.now()});\n                    }} >등록</button>\n            </div>)\n            }\n        </div>\n    )\n}\n","import React from 'react'\nimport \"./PostPreview.css\";\nimport ReactMarkdown from 'react-markdown'\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport {xonokai} from 'react-syntax-highlighter/dist/esm/styles/prism' // 1\nimport { useHistory } from 'react-router-dom';\n// import {dark} from 'react-syntax-highlighter/dist/esm/styles/prism'\n// import {coy} from 'react-syntax-highlighter/dist/esm/styles/prism'\n// import { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nfunction formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        hour = '' + d.getHours(),\n        minute = '' + d.getMinutes(),\n        second = '' + d.getSeconds();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n    if (hour.length < 2) \n        hour = '0' + hour;\n    if (minute.length < 2) \n        minute = '0' + minute;\n    if (second.length < 2) \n        second = '0' + second;\n        \n    return `${month}-${day} ${hour}:${minute}:${second}`;\n}\n\nconst renderers = {\n    code: ({language, value}) => {\n      return <SyntaxHighlighter style={xonokai} language= {language} children={value} />\n    }\n}\n\nexport const PostPreview = ({post}) => {\n    const history = useHistory();\n\n    return (\n        <div className = \"postPreview\" onClick = {() => {history.push(`/post/${post.id}`)}}>\n            <h1 className = \"postPreview-title\">{post.title}</h1>\n            <div className = \"postPreview-info-container\">\n                <small>{post.id}</small>\n                <small>&nbsp;&nbsp;&nbsp;</small>\n                <small>{formatDate(post.createdAt)}</small> \n            </div>\n            <div className = \"postPreview-body\">\n                <ReactMarkdown renderers={renderers}>{post.body}</ReactMarkdown>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport {PostPreview} from \"../components/PostPreview\";\n\nexport const PostList = ({postList}) => {\n\n    const postView = postList.map((p) => {\n        return <PostPreview key = {p.id}\n                            post = {p}\n                            />\n    })\n\n    return (\n        <div style = {{marginLeft: \"15%\", marginRight: \"15%\", marginBottom: \"10%\", marginTop: \"3%\"}}>\n            {postView}\n        </div>\n    )\n}\n","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport { useHistory } from 'react-router-dom';\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport {xonokai} from 'react-syntax-highlighter/dist/esm/styles/prism' // 1\nimport \"./PostView.css\";\n\nfunction formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        hour = '' + d.getHours(),\n        minute = '' + d.getMinutes(),\n        second = '' + d.getSeconds();\n\n    if (month.length < 2) \n        month = '0' + month;\n    if (day.length < 2) \n        day = '0' + day;\n    if (hour.length < 2) \n        hour = '0' + hour;\n    if (minute.length < 2) \n        minute = '0' + minute;\n    if (second.length < 2) \n        second = '0' + second;\n\n    return `${month}-${day} ${hour}:${minute}:${second}`;\n}\nconst renderers = {\n    code: ({language, value}) => {\n      return <SyntaxHighlighter style={xonokai} language= {language} children={value} />\n    }\n}\n\nexport const PostView = ({post, onPostDelete}) => {\n\n    const history = useHistory();\n\n    return (\n        <div className = \"postView-container\">\n            <h1 className = \"postView-title\">{post.title}</h1>\n            <div className = \"postView-info-container\">\n                <div>\n                    <small>{post.id}</small>\n                    <small>&nbsp;&nbsp;&nbsp;</small>\n                    <small>{formatDate(post.createdAt)}</small> \n                </div>\n                <div style = {{justifySelf: \"flex-end\"}}>\n                    <span onClick = {() => {history.push(`/write?id=${post.id}`)}} style = {{cursor: \"pointer\"}}>수정</span>\n                    <small>&nbsp;&nbsp;&nbsp;</small>\n                    <span onClick = {() => {onPostDelete(post); alert(\"삭제되었습니다.\")}} style = {{cursor: \"pointer\"}}>삭제</span>\n                </div>\n            </div>\n            <div className = \"postView-body\">\n                <ReactMarkdown renderers={renderers}>{post.body}</ReactMarkdown>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport './Card.css'\nimport Flippy, { FrontSide, BackSide } from 'react-flippy';\n// import back from \"./back_test3.png\";\nexport const Card = ({ id, content, flipped, handleClick, matched }) => {\n\n  return (\n    <div className=\"card\">\n      <Flippy\n        isFlipped={flipped}\n        flipOnHover={false} // default false\n        flipDirection=\"horizontal\" // horizontal or vertical\n        style={{ width: window.innerWidth / 2 / 4 *.8, height: window.innerWidth / 2 / 4 * .8 * 1.4 }}\n      >\n        <FrontSide\n          animationDuration = {450}\n          className=\"card-front\"\n        >\n          <img className=\"card-back-image\" src={process.env.PUBLIC_URL + '/images/' + content} alt=\"front\" />\n        </FrontSide>\n        <BackSide\n          animationDuration = {450}\n          onClick={() => { handleClick(id) }}\n          className=\"card-back\"\n        >\n          <img className=\"card-back-image\" src={process.env.PUBLIC_URL + '/images/back_test3.png'} alt=\"back\" />\n        </BackSide>\n      </Flippy>\n    </div>\n  )\n}\n\n","import React, { useEffect, useRef, useState } from 'react'\nimport \"./TimeCounter.css\";\n\nexport const TimeCounter = ({started, isFinished, onRestart, writeRecord}) => {\n    const [state, setState] = useState({\n        startTime: Date.now(),\n        diff: 0,\n        // intervalId: null,\n    })\n    const intervalRef = useRef(); // TODO: 왜 이거로 하니까 됨? state 로 할땐 안되는데\n\n    const formatTime = (time) => {\n        let s = (time / 1000).toFixed(2);\n        let m = Math.floor(s / 60);\n        s = (s - m * 60).toFixed(2);\n\n        // return `${m}분 ${s}`\n        return <div className = \"timeCounter-time\">\n            <span className = \"dynamic\">{m}</span><span>분</span><span className = \"dynamic2\">{s}</span><span>초</span>\n        </div>\n    }\n\n    useEffect(() => {\n        if (started) {\n            const id = setInterval(() => {\n                setState({...state, diff: Date.now() - state.startTime});\n            }, 80);\n            intervalRef.current = id;\n            return () => {\n                clearInterval(intervalRef.current);\n            }\n\n        }\n    }, [state, started])\n\n    useEffect(() => {\n        if (isFinished) {\n            clearInterval(intervalRef.current);\n            writeRecord(state.diff);\n        }\n    }, [isFinished])\n\n    const handleRestart = () => {\n        setState({\n            startTime: Date.now(),\n            diff: 0\n        });\n        onRestart();\n    }\n    return (\n        <div className = \"timeCounter-container\">\n            {formatTime(state.diff)}\n            <button className = \"timeCounter-restartButton\" onClick = {handleRestart}>Restart</button>\n        </div>\n    )\n}\n","// import * as firebase from \"firebase\"; // before 8.0.0\nimport firebase from 'firebase/app' // after 8.0.0\nimport \"firebase/database\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCuPyGhtMKv4F00ES-leNp9j_NPS7b4XiI\",\n    authDomain: \"forum-renewal-test.firebaseapp.com\",\n    projectId: \"forum-renewal-test\",\n    storageBucket: \"forum-renewal-test.appspot.com\",\n    messagingSenderId: \"632834950560\",\n    appId: \"1:632834950560:web:85c25a414e411e3dac50c5\",\n    measurementId: \"G-NKZ1TMVFHZ\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n// Get a reference to the database service\nexport const db = firebase.database();","import React, { useState } from 'react'\nimport \"./RecordModal.css\";\nimport {db} from \"../firebase\";\n\nexport const RecordModal = ({ record, getRecords}) => {\n    const [state, setState] = useState({\n        username: \"\",\n        display: \"\",\n    })\n\n    const handleRecordWrite = () => {\n        let key = db.ref('memoryGameRecord').push().key;\n        var updates = {};\n        updates['memoryGameRecord/' + key] = {username: state.username, record: record};\n\n        db.ref().update(updates).then(() => {\n            getRecords();\n        });\n    }\n\n    return (\n        <div className={`recordModal-container ${state.display}`}\n        onClick={(e) => {\n            setState({ ...state, display: 'none' });\n        }}\n            >\n            <div className=\"recordModal-content\" onClick = {(e) => {e.stopPropagation()}}>\n                <div >\n                    걸린 시간: {record}초\n                    <span onClick={() => {\n                        setState({ ...state, display: 'none' });\n                    }}>&times;</span>\n                </div>\n                <div>\n                    <div>\n                        닉네임\n                    </div>\n                    <input\n                        autoFocus = {true}\n                        placeholder=\"닉네임을 입력하세요...\"\n                        className = \"recordModal-usernameInput\"\n                        type=\"text\" value={state.username}\n                        onChange={e => setState({...state, username: e.target.value})}\n                        onKeyDown = {(e) => {\n                            if (e.key == 'Enter') {\n                                handleRecordWrite();\n                                setState({ ...state, display: 'none' });\n                            } else if (e.key == \"Escape\") {\n                                setState({ ...state, display: 'none' });\n                            }\n                        }}\n                    />\n\n                </div>\n                <button className = \"recordModal-submitButton\" \n                onClick = {() => {\n                    handleRecordWrite();\n                    setState({ ...state, display: 'none' });\n                }}>등록하기</button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Card } from '../components/Card'\nimport { TimeCounter } from '../components/TimeCounter'\nimport \"./MemoryGame.css\"\nimport cardContent from \"./cardContent.json\";\nimport { db } from '../firebase';\nimport { RecordModal } from '../components/RecordModal';\n\nexport const MemoryGame = () => {\n\n    const shuffleArr = (arr) => {\n        const newArr = arr.slice();\n        for (let i = newArr.length - 1; i > 0; i--) {\n            const rand = Math.floor(Math.random() * (i + 1)); // 0 ~ i\n            [newArr[i], newArr[rand]] = [newArr[rand], newArr[i]];\n        }\n        return newArr;\n    }\n\n    const generateCards = () => {\n        // let tmp = [...Array(3).keys()]\n\n        let tmp = cardContent;\n        tmp = shuffleArr(tmp).slice(0, 6);\n        tmp = tmp.concat(tmp);\n        tmp = shuffleArr(tmp);\n        return tmp.map((t) => {\n            let obj = {};\n            obj.id = Math.random().toString(36).substr(2, 9);\n            obj.flipped = true;\n            obj.content = t.content;\n            obj.matched = false;\n            return obj;\n        });\n    }\n    \n    const [state, setState] = useState({\n        cards: generateCards(), // [{id: , flipped: , ...}, {}, ...]\n        started: false,\n        isFinished: false,\n        gameTurn: 0,\n        onAnimation: false,\n        matched: 0,\n        recordList: [],\n        record: 0,\n    });\n\n    const getRecords = () => {\n        let newRecordList = [];\n        let order = 1;\n        console.log(\"getRecords called\");\n        db.ref('memoryGameRecord').orderByChild(\"record\").once('value', (snapshot) => {\n            snapshot.forEach((snap) => {\n                newRecordList.push({\n                    key: snap.key,\n                    order: order,\n                    username: snap.val().username,\n                    record: snap.val().record\n                })\n                order = order + 1;\n            })\n            // return newRecordList;\n            setState({...state, recordList: newRecordList});\n        })\n    }\n    useEffect(() => {\n        getRecords();\n    }, [])\n    const generateRecordComponent = () => {\n        if (state.recordList) {\n            return state.recordList.map((r) => {\n                return <div key = {r.key}>\n                    <div style ={{display: \"flex\", justifyContent: \"space-between\"}}>\n                        <h2>{r.order}.</h2>\n                        <h2>{r.username}</h2>\n                        <h2>{r.record}초</h2>\n                    </div>\n                </div>\n            })\n\n        }\n    }\n    useEffect(() => {\n        if (!state.isFinished && !state.cards.find(card => !card.matched)) {\n          setState({ ...state, isFinished: true });\n          // get time\n          // \n        } \n\n        \n        \n      }, [state]);\n\n    const handleClick = (id) => {\n        if (state.onAnimation) {\n            return;\n        }\n        let cardsToUpdate = state.cards.map((card) => {\n            const copyCard = {...card};\n            if (copyCard.id === id) {\n                copyCard.flipped = false;\n            }\n            return copyCard;\n        });\n        \n        // 일단 뒤집어\n        if (!state.onAnimation) {\n            setState({...state, onAnimation: state.gameTurn === 1, gameTurn: (state.gameTurn + 1) % 2, cards: cardsToUpdate});\n        }\n\n        const justFlippedCard = cardsToUpdate.find((card) => card.id === id);\n\n        let isMatched = false;\n\n        // find matching card card and \n        cardsToUpdate = cardsToUpdate.map((card) => {\n            const copyCard = {...card};\n            if (copyCard.content === justFlippedCard.content && copyCard.id !== justFlippedCard.id) {\n                if (!copyCard.flipped) {\n                    isMatched = true;\n                    copyCard.matched = true;\n                } else {\n                    copyCard.flipped = true;\n                }\n            }\n            return copyCard;\n        });\n\n        if (!isMatched) {\n            cardsToUpdate = cardsToUpdate.map((card) => {\n                const copyCard = {...card};\n                if (!copyCard.matched && !copyCard.flipped) {\n                    copyCard.flipped = true;\n                }\n                return copyCard\n            })\n        } else {\n            cardsToUpdate = cardsToUpdate.map((card) => {\n                const copyCard = {...card};\n                if (copyCard.id === id) {\n                    copyCard.matched = true;\n                }\n                return copyCard\n            })\n        }\n        \n        if (!state.onAnimation && state.gameTurn === 1) {\n            setTimeout(() => {\n                setState({...state, onAnimation: false, matched: isMatched ? state.matched + 1 : state.matched, gameTurn: (state.gameTurn + 1) % 2, cards: cardsToUpdate});\n            }, 500);\n        }\n    }\n    \n    const generateCardComponents = () => {\n        return state.cards.map((obj) => {\n            return <Card \n                        handleClick = {handleClick}\n                        key = {obj.id}\n                        id = {obj.id}\n                        content = {obj.content}\n                        flipped = {obj.flipped}\n                        matched = {obj.matched}\n                    />\n        })\n    }\n    const onRestart = () => {\n        setState({\n            ...state,\n            cards: generateCards(), // [{id: , flipped: , ...}, {}, ...]\n            isFinished: false,\n            gameTurn: 0,\n            onAnimation: false,\n            waitCardId: 0,\n            matched: 0\n        });\n    }\n    const writeRecord = (time) => {\n        setState({...state, record: time / 1000});\n    }\n    const onStart = () => {\n        setState({...state, started: true});\n        console.log(`onStart executed`)\n    }\n    return (\n        <div>\n            {state.isFinished ? <RecordModal getRecords = {getRecords} record = {state.record}/> : <></>}\n                {state.started ? (\n            <div className = \"memoryGame-container\">\n                    <div className = \"memoryGame-info\">\n                        <h1>{`Matched: ${state.matched}`}</h1>\n                        <h1 className = \"memoryGame-time\">\n                            <TimeCounter started = {state.started} isFinished = {state.isFinished} onStart = {onStart} onRestart = {onRestart} writeRecord = {writeRecord}/>\n                        </h1>\n                        {state.started && state.isFinished ? (\n                            <h1>YOU WIN!!!</h1>\n                        ) : (<></>)}\n                    </div>\n                    <div className = \"memoryGame-main\">\n                        <div className = \"grow-1\">\n                            <></>\n                        </div> \n                        <div className = \"memoryGame-cards\">\n                            {generateCardComponents()}\n                        </div>\n\n                        <div className = \"grow-1\">\n                            {generateRecordComponent()}\n                        </div>\n                    </div>\n            </div>\n\n                ) : (\n                    // <h1>Loading...</h1>\n                    <div className = \"memoryGame-container\">\n\n                        <button className = \"timeCounter-restartButton\" onClick = {onStart}>Start</button>\n                    </div>\n\n\n                )}\n        </div>\n    )\n}\n","import './App.css';\nimport {\n  Route, useLocation,\n} from \"react-router-dom\";\n\nimport {Header} from \"./components/Header\"\nimport {FireworkCanvas} from \"./routes/FireworkCanvas\";\nimport { Home } from './routes/Home';\nimport { Write } from './routes/Write';\nimport { PostList } from './routes/PostList';\nimport { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { PostView } from './routes/PostView';\nimport { MemoryGame } from './routes/MemoryGame';\n\nexport default function App() {\n  const history = useHistory();\n  \n  const [postList, setPostList] = useState(\n    [{id: 0,\n      title: \"SampleTitle\",\n    body: String.raw`**Hello world!!!**\n# 제목1\n1. 1번\n2. 2번\n3. 3번\n## 제목2\n- 하나\n- 둘\n- 셋\n${\"```\"}cpp\n#include <iostream>\nusing namespace std;\nint main() {\n  cout << \"hello, world\\n\";\n}\n${\"```\"}\n\n*Italic*\n> Blockquote\n\n`,\ncreatedAt: Date.now()\n  }]\n  )\n  const onPostWrite = (p) => {\n    if (postList.length !== 0) {\n      p.id = postList[postList.length - 1].id + 1;\n    } else {\n      p.id = 0;\n    }\n    setPostList([...postList, p]);\n    history.push(\"/post\");\n  }\n\n  const onPostUpdate = (p) => {\n    const newPostList = postList.map((post) => {\n      if (post.id === p.id) {\n        return {...post, title: p.title, body: p.body};\n      } else {\n        return post;\n      }\n    })\n\n    setPostList(newPostList);\n  }\n\n  const onPostDelete = (p) => {\n    setPostList(postList.filter(post => post.id !== p.id));\n    history.push(\"/post\");\n  }\n\n  const findPostIdx = (id) => {\n    for (let idx in postList) {\n      if (postList[idx].id === id) {\n        return idx;\n      }\n    }\n  }\n\n  function useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n\n  let query = useQuery();\n\n  return (\n    <div>\n      <Header/>\n      <Route\n        exact\n        path='/'\n        render={() => <Home/>}\n        />\n      <Route\n        path='/canvas'\n        render={() => <FireworkCanvas/>}\n      />\n      <Route\n        path='/memoryGame'\n        render={() => <MemoryGame/>}\n      />\n      <Route\n        path='/write'\n        render = {() => {\n          let id = query.get(\"id\");\n          if (id) {\n            return <Write post = {postList[findPostIdx(Number(id))]} onPostUpdate = {onPostUpdate}/>\n          } else {\n            return <Write onPostWrite = {onPostWrite}/>\n          }\n        }}\n        />\n      <Route\n        exact\n        path='/post'\n        render={() => <PostList postList = {[].concat(postList).reverse()}/>}\n        />\n      <Route\n        path='/post/:id'\n        render={({ match }) => (\n            <PostView\n                post = {postList[findPostIdx(Number(match.params.id))]}\n                onPostDelete = {onPostDelete}\n            />\n        )}\n        />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\n// import { Provider } from 'react-redux'\n// import store from './redux/store'\n\n// ReactDOM.render(\n//     <Provider store={store}>\n//       <App />\n//     </Provider>, \n//   document.getElementById('root')\n// );\nReactDOM.render(\n  <Router basename=\"/forum-renewal\">\n      <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}