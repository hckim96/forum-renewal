{"version":3,"sources":["components/Header.js","routes/FireworkCanvas.js","components/Card.js","routes/Home.js","routes/Write.js","components/PostPreview.js","routes/PostList.js","routes/PostView.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","exact","activeClassName","FireworkCanvas","useEffect","window","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","callback","setTimeout","mx","my","canvas","document","getElementById","ctx","getContext","cw","innerWidth","ch","innerHeight","fireworks","particles","hue","limiterTick","mousedown","random","min","max","Math","Firework","sx","sy","tx","ty","this","x","y","distanceToTarget","distanceTraveled","coordinates","coordinateCount","push","angle","atan2","speed","acceleration","brightness","targetRadius","Particle","PI","friction","gravity","alpha","decay","width","height","prototype","update","index","pop","unshift","particleCount","createParticles","splice","draw","beginPath","strokeStyle","stroke","arc","cos","sin","moveTo","length","lineTo","addEventListener","e","pageX","offsetLeft","pageY","offsetTop","preventDefault","loop","globalCompositeOperation","fillStyle","fillRect","i","id","Card","number","style","display","alignItems","justifyContent","boxShadow","borderRadius","Home","Cards","Array","keys","map","d","paddingTop","flexWrap","sampleBody","String","raw","renderers","code","language","value","xonokai","children","Write","onPostWrite","onPostUpdate","post","post2","useState","title","setTitle","body","setValue","selectedTab","setSelectedTab","history","useHistory","placeholder","type","onChange","target","onTabChange","minEditorHeight","generateMarkdownPreview","markdown","Promise","resolve","onClick","alert","autoFocus","createdAt","Date","now","formatDate","date","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","PostPreview","PostList","postView","postList","p","marginLeft","marginRight","marginBottom","marginTop","PostView","onPostDelete","justifySelf","cursor","App","setPostList","newPostList","filter","findPostIdx","idx","query","URLSearchParams","useLocation","search","path","render","get","Number","concat","reverse","match","params","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename"],"mappings":"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","file":"static/js/main.1ae6ccb7.chunk.js","sourcesContent":["import React from 'react'\r\nimport {NavLink } from 'react-router-dom'\r\nimport \"./Header.css\";\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className = \"header-container\">\r\n            <NavLink to = \"/\" exact = {true} className=\"header-link\" activeClassName = \"header-activeLink\"><span>홈</span></NavLink>\r\n            <NavLink to = \"/canvas\" className=\"header-link\" activeClassName = \"header-activeLink\"><span>폭죽놀이</span></NavLink>\r\n            <NavLink to = \"/post\" className=\"header-link\" activeClassName = \"header-activeLink\"><span>포스트리스트</span></NavLink>\r\n            <NavLink to = \"/write\" className=\"header-link\" activeClassName = \"header-activeLink\"><span>글 쓰기</span></NavLink>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nexport const FireworkCanvas = () => {\r\n    \r\n    useEffect(() => {\r\n        \r\n        // when animating on canvas, it is best to use requestAnimationFrame instead of setTimeout or setInterval\r\n        // not supported in all browsers though and sometimes needs a prefix, so we need a shim\r\n        window.requestAnimFrame= ( function() {\r\n            return window.requestAnimationFrame ||\r\n                        window.webkitRequestAnimationFrame ||\r\n                        window.mozRequestAnimationFrame ||\r\n                        function( callback ) {\r\n                            window.setTimeout( callback, 1000 / 60 );\r\n                        };\r\n        })();\r\n        \r\n        // now we will setup our basic variables for the demo\r\n        var canvas = document.getElementById( 'canvas' ),\r\n                ctx = canvas.getContext( '2d' ),\r\n                // full screen dimensions\r\n                cw = window.innerWidth,\r\n                ch = window.innerHeight,\r\n                // firework collection\r\n                fireworks = [],\r\n                // particle collection\r\n                particles = [],\r\n                // starting hue\r\n                hue = 120,\r\n                // when launching fireworks with a click, too many get launched at once without a limiter, one launch per 5 loop ticks\r\n                limiterTotal = 5,\r\n                limiterTick = 0,\r\n                // this will time the auto launches of fireworks, one launch per 80 loop ticks\r\n                // timerTotal = 80,\r\n                // timerTick = 0,\r\n                mousedown = false,\r\n                // mouse x coordinate,\r\n                mx,\r\n                // mouse y coordinate\r\n                my;\r\n        // set canvas dimensions\r\n        canvas.width = cw;\r\n        canvas.height = ch;\r\n        \r\n        // now we are going to setup our function placeholders for the entire demo\r\n        \r\n        // get a random number within a range\r\n        function random( min, max ) {\r\n            return Math.random() * ( max - min ) + min;\r\n        }\r\n        \r\n        // calculate the distance between two points\r\n        // function calculateDistance( p1x, p1y, p2x, p2y ) {\r\n        //     var xDistance = p1x - p2x,\r\n        //             yDistance = p1y - p2y;\r\n        //     return Math.sqrt( Math.pow( xDistance, 2 ) + Math.pow( yDistance, 2 ) );\r\n        // }\r\n        \r\n        // create firework\r\n        function Firework( sx, sy, tx, ty ) {\r\n            // actual coordinates\r\n            this.x = sx;\r\n            this.y = sy;\r\n            // starting coordinates\r\n            this.sx = sx;\r\n            this.sy = sy;\r\n            // target coordinates\r\n            this.tx = tx;\r\n            this.ty = ty;\r\n            // distance from starting point to target\r\n            this.distanceToTarget = 0;\r\n            this.distanceTraveled = 0;\r\n            // track the past coordinates of each firework to create a trail effect, increase the coordinate count to create more prominent trails\r\n            this.coordinates = [];\r\n            this.coordinateCount = 3;\r\n            // populate initial coordinate collection with the current coordinates\r\n            while( this.coordinateCount-- ) {\r\n                this.coordinates.push( [ this.x, this.y ] );\r\n            }\r\n            this.angle = Math.atan2( ty - sy, tx - sx );\r\n            this.speed = 2;\r\n            this.acceleration = 1.05;\r\n            this.brightness = random( 50, 70 );\r\n            // circle target indicator radius\r\n            this.targetRadius = 1;\r\n        }\r\n        \r\n        // update firework\r\n        Firework.prototype.update = function( index ) {\r\n            // remove last item in coordinates array\r\n            this.coordinates.pop();\r\n            // add current coordinates to the start of the array\r\n            this.coordinates.unshift( [ this.x, this.y ] );\r\n            \r\n            // cycle the circle target indicator radius\r\n            if( this.targetRadius < 8 ) {\r\n                this.targetRadius += 0.3;\r\n            } else {\r\n                this.targetRadius = 1;\r\n            }\r\n            \r\n            createParticles( this.tx, this.ty );\r\n            fireworks.splice( index, 1 );\r\n\r\n            // // speed up the firework\r\n            // this.speed *= this.acceleration;\r\n            \r\n            // // get the current velocities based on angle and speed\r\n            // var vx = Math.cos( this.angle ) * this.speed,\r\n            //         vy = Math.sin( this.angle ) * this.speed;\r\n            // // how far will the firework have traveled with velocities applied?\r\n            // this.distanceTraveled = calculateDistance( this.sx, this.sy, this.x + vx, this.y + vy );\r\n            \r\n            // // if the distance traveled, including velocities, is greater than the initial distance to the target, then the target has been reached\r\n            // if( this.distanceTraveled >= this.distanceToTarget ) {\r\n            //     createParticles( this.tx, this.ty );\r\n            //     // remove the firework, use the index passed into the update function to determine which to remove\r\n            //     fireworks.splice( index, 1 );\r\n            // } else {\r\n            //     // target not reached, keep traveling\r\n            //     this.x += vx;\r\n            //     this.y += vy;\r\n            // }\r\n        }\r\n        \r\n        // draw firework\r\n        Firework.prototype.draw = function() {\r\n            ctx.beginPath();\r\n            // move to the last tracked coordinate in the set, then draw a line to the current x and y\r\n            // ctx.moveTo( this.coordinates[ this.coordinates.length - 1][ 0 ], this.coordinates[ this.coordinates.length - 1][ 1 ] );\r\n            // ctx.lineTo( this.x, this.y );\r\n            ctx.strokeStyle = 'hsl(' + hue + ', 100%, ' + this.brightness + '%)';\r\n            ctx.stroke();\r\n            \r\n            ctx.beginPath();\r\n            // draw the target for this firework with a pulsing circle\r\n            ctx.arc( this.tx, this.ty, this.targetRadius, 0, Math.PI * 2 );\r\n            ctx.stroke();\r\n        }\r\n        \r\n        // create particle\r\n        function Particle( x, y ) {\r\n            this.x = x;\r\n            this.y = y;\r\n            // track the past coordinates of each particle to create a trail effect, increase the coordinate count to create more prominent trails\r\n            this.coordinates = [];\r\n            this.coordinateCount = 5;\r\n            while( this.coordinateCount-- ) {\r\n                this.coordinates.push( [ this.x, this.y ] );\r\n            }\r\n            // set a random angle in all possible directions, in radians\r\n            this.angle = random( 0, Math.PI * 2 );\r\n            this.speed = random( 1, 10 );\r\n            // friction will slow the particle down\r\n            this.friction = 0.95;\r\n            // gravity will be applied and pull the particle down\r\n            this.gravity = 1;\r\n            // set the hue to a random number +-50 of the overall hue variable\r\n            this.hue = random( hue - 50, hue + 50 );\r\n            this.brightness = random( 50, 80 );\r\n            this.alpha = 1;\r\n            // set how fast the particle fades out\r\n            this.decay = random( 0.015, 0.03 );\r\n        }\r\n        \r\n        // update particle\r\n        Particle.prototype.update = function( index ) {\r\n            // remove last item in coordinates array\r\n            this.coordinates.pop();\r\n            // add current coordinates to the start of the array\r\n            this.coordinates.unshift( [ this.x, this.y ] );\r\n            // slow down the particle\r\n            this.speed *= this.friction;\r\n            // apply velocity\r\n            this.x += Math.cos( this.angle ) * this.speed;\r\n            this.y += Math.sin( this.angle ) * this.speed + this.gravity;\r\n            // fade out the particle\r\n            this.alpha -= this.decay;\r\n            \r\n            // remove the particle once the alpha is low enough, based on the passed in index\r\n            if( this.alpha <= this.decay ) {\r\n                particles.splice( index, 1 );\r\n            }\r\n        }\r\n        \r\n        // draw particle\r\n        Particle.prototype.draw = function() {\r\n            ctx.beginPath();\r\n            // move to the last tracked coordinates in the set, then draw a line to the current x and y\r\n            ctx.moveTo( this.coordinates[ this.coordinates.length - 1 ][ 0 ], this.coordinates[ this.coordinates.length - 1 ][ 1 ] );\r\n            ctx.lineTo( this.x, this.y );\r\n            ctx.strokeStyle = 'hsla(' + this.hue + ', 100%, ' + this.brightness + '%, ' + this.alpha + ')';\r\n            ctx.stroke();\r\n        }\r\n        \r\n        // create particle group/explosion\r\n        function createParticles( x, y ) {\r\n            // increase the particle count for a bigger explosion, beware of the canvas performance hit with the increased particles though\r\n            var particleCount = 30;\r\n            while( particleCount-- ) {\r\n                particles.push( new Particle( x, y ) );\r\n            }\r\n        }\r\n        \r\n        // main demo loop\r\n        function loop() {\r\n            // this function will run endlessly with requestAnimationFrame\r\n            window.requestAnimFrame( loop );\r\n            \r\n            // increase the hue to get different colored fireworks over time\r\n            //hue += 0.5;\r\n        \r\n            // create random color\r\n            hue= random(0, 360 );\r\n            \r\n            // normally, clearRect() would be used to clear the canvas\r\n            // we want to create a trailing effect though\r\n            // setting the composite operation to destination-out will allow us to clear the canvas at a specific opacity, rather than wiping it entirely\r\n\r\n            // ctx.globalCompositeOperation = 'destination-out';\r\n            // ctx.fillStyle = \"rgba(0, 0, 0, .3)\";\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            ctx.fillStyle = \"rgba(0, 0, 0, .5)\";\r\n            \r\n            // decrease the alpha property to create more prominent trails\r\n            ctx.fillRect( 0, 0, cw, ch );\r\n            // change the composite operation back to our main mode\r\n            // lighter creates bright highlight points as the fireworks and particles overlap each other\r\n            ctx.globalCompositeOperation = 'lighter';\r\n            \r\n            // loop over each firework, draw it, update it\r\n            var i = fireworks.length;\r\n            while( i-- ) {\r\n                fireworks[ i ].draw();\r\n                fireworks[ i ].update( i );\r\n            }\r\n            \r\n            // loop over each particle, draw it, update it\r\n            // var i = particles.length;\r\n            i = particles.length;\r\n            while( i-- ) {\r\n                particles[ i ].draw();\r\n                particles[ i ].update( i );\r\n            }\r\n            \r\n            // launch fireworks automatically to random coordinates, when the mouse isn't down\r\n            // if( timerTick >= timerTotal ) {\r\n            //     if( !mousedown ) {\r\n            //         // start the firework at the bottom middle of the screen, then set the random target coordinates, the random y coordinates will be set within the range of the top half of the screen\r\n            //         fireworks.push( new Firework( cw / 2, ch, random( 0, cw ), random( 0, ch / 2 ) ) );\r\n            //         timerTick = 0;\r\n            //     }\r\n            // } else {\r\n            //     timerTick++;\r\n            // }\r\n            \r\n            // limit the rate at which fireworks get launched when mouse is down\r\n            if( limiterTick >= limiterTotal ) {\r\n                if( mousedown ) {\r\n                    // start the firework at the bottom middle of the screen, then set the current mouse coordinates as the target\r\n                    fireworks.push( new Firework( cw / 2, ch, mx, my ) );\r\n                    limiterTick = 0;\r\n                }\r\n            } else {\r\n                limiterTick++;\r\n            }\r\n        }\r\n        \r\n        // mouse event bindings\r\n        // update the mouse coordinates on mousemove\r\n        canvas.addEventListener( 'mousemove', function( e ) {\r\n            mx = e.pageX - canvas.offsetLeft;\r\n            my = e.pageY - canvas.offsetTop;\r\n        });\r\n        \r\n        // toggle mousedown state and prevent canvas from being selected\r\n        canvas.addEventListener( 'mousedown', function( e ) {\r\n            e.preventDefault();\r\n            mousedown = true;\r\n        });\r\n        \r\n        canvas.addEventListener( 'mouseup', function( e ) {\r\n            e.preventDefault();\r\n            mousedown = false;\r\n        });\r\n        \r\n        // once the window loads, we are ready for some fireworks!\r\n        loop();\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <canvas id = \"canvas\">\r\n            </canvas>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './Card.css'\r\n\r\nexport const Card = ({number}) => {\r\n    return (\r\n        <div className = \"card\" style = {{display: \"flex\",\r\n         alignItems: \"center\",\r\n         justifyContent: \"center\",\r\n         boxShadow: \"3px 3px 10px black\",\r\n         borderRadius: \"10px\"}}>\r\n            <b>card {number}</b>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { Card } from '../components/Card'\r\n\r\nexport const Home = () => {\r\n    let Cards =  [...Array(40).keys()].map((d) =>\r\n      <Card number = {d}/>\r\n  );\r\n    return (\r\n      <div>\r\n        <div style = {{paddingTop: \"20px\", display: \"flex\", flexWrap: \"wrap\"}}>\r\n          {Cards}\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ReactMde from \"react-mde\";\r\nimport ReactMarkdown from 'react-markdown'\r\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\r\nimport {xonokai} from 'react-syntax-highlighter/dist/esm/styles/prism' // 1\r\n\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\nimport \"./Write.css\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst sampleBody = String.raw`**Hello world!!!**\r\n# 제목1\r\n1. 1번\r\n2. 2번\r\n3. 3번\r\n## 제목2\r\n- 하나\r\n- 둘\r\n- 셋\r\n${\"```\"}cpp\r\n#include <iostream>\r\nusing namespace std;\r\nint main() {\r\n  cout << \"hello, world\\n\";\r\n}\r\n${\"```\"}\r\n\r\n*Italic*\r\n> Blockquote\r\n\r\n`;\r\n\r\nconst renderers = {\r\n    code: ({language, value}) => {\r\n      return <SyntaxHighlighter style={xonokai} language= {language} children={value}/>\r\n    }\r\n}\r\n\r\nexport const Write = ({onPostWrite, onPostUpdate, post}) => {\r\n\r\n    let post2 = post ? post : {\"title\" : \"\", \"body\" : sampleBody};\r\n    const [title, setTitle] = useState(post2.title);\r\n    const [value, setValue] = useState(post2.body);\r\n    \r\n    const [selectedTab, setSelectedTab] = useState(\"write\");\r\n\r\n    const history = useHistory();\r\n    return (\r\n        <div>\r\n            {post ?\r\n            (<div className = \"write-container\">\r\n                    <input\r\n                            placeholder = \"제목을 입력하세요...\" \r\n                            className = \"write-title\" \r\n                            type=\"text\" value={title} \r\n                            onChange={e => setTitle(e.target.value)}\r\n                            />\r\n                    <ReactMde\r\n                        className = \"write-mde\"\r\n                        value={value}\r\n                        onChange={setValue}\r\n                        selectedTab={selectedTab}\r\n                        onTabChange={setSelectedTab}\r\n                        minEditorHeight = {400}\r\n                        generateMarkdownPreview={markdown =>\r\n                            Promise.resolve(<ReactMarkdown renderers={renderers}>{markdown}</ReactMarkdown>)\r\n                        }\r\n                        />\r\n\r\n                    <button className = \"write-button\"\r\n                    onClick = {() => {\r\n                        onPostUpdate({...post2 ,title: title, body: value, id: post2.id});\r\n                        alert(\"수정되었습니다.\")\r\n                        history.push(`/post/${post2.id}`);\r\n                    }} >수정</button>\r\n            </div>)\r\n            :\r\n            (<div className = \"write-container\">\r\n                    <input autoFocus = {true} \r\n                            placeholder = \"제목을 입력하세요...\" \r\n                            className = \"write-title\" \r\n                            type=\"text\" value={title} \r\n                            onChange={e => setTitle(e.target.value)}\r\n                    />\r\n                    <ReactMde\r\n                        className = \"write-mde\"\r\n                        value={value}\r\n                        onChange={setValue}\r\n                        selectedTab={selectedTab}\r\n                        onTabChange={setSelectedTab}\r\n                        minEditorHeight = {400}\r\n                        generateMarkdownPreview={markdown =>\r\n                        Promise.resolve(<ReactMarkdown renderers={renderers}>{markdown}</ReactMarkdown>)\r\n                        }\r\n                    />\r\n\r\n                    <button className = \"write-button\"\r\n                    onClick = {() => {\r\n                        onPostWrite({title: title, body: value, createdAt: Date.now()});\r\n                    }} >등록</button>\r\n            </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./PostPreview.css\";\r\nimport ReactMarkdown from 'react-markdown'\r\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\r\nimport {xonokai} from 'react-syntax-highlighter/dist/esm/styles/prism' // 1\r\nimport { useHistory } from 'react-router-dom';\r\n// import {dark} from 'react-syntax-highlighter/dist/esm/styles/prism'\r\n// import {coy} from 'react-syntax-highlighter/dist/esm/styles/prism'\r\n// import { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nfunction formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        hour = '' + d.getHours(),\r\n        minute = '' + d.getMinutes(),\r\n        second = '' + d.getSeconds();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n    if (hour.length < 2) \r\n        hour = '0' + hour;\r\n    if (minute.length < 2) \r\n        minute = '0' + minute;\r\n    if (second.length < 2) \r\n        second = '0' + second;\r\n        \r\n    return `${month}-${day} ${hour}:${minute}:${second}`;\r\n}\r\n\r\nconst renderers = {\r\n    code: ({language, value}) => {\r\n      return <SyntaxHighlighter style={xonokai} language= {language} children={value} />\r\n    }\r\n}\r\n\r\nexport const PostPreview = ({post}) => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className = \"postPreview\" onClick = {() => {history.push(`/post/${post.id}`)}}>\r\n            <h1 className = \"postPreview-title\">{post.title}</h1>\r\n            <div className = \"postPreview-info-container\">\r\n                <small>{post.id}</small>\r\n                <small>&nbsp;&nbsp;&nbsp;</small>\r\n                <small>{formatDate(post.createdAt)}</small> \r\n            </div>\r\n            <div className = \"postPreview-body\">\r\n                <ReactMarkdown renderers={renderers}>{post.body}</ReactMarkdown>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {PostPreview} from \"../components/PostPreview\";\r\n\r\nexport const PostList = ({postList}) => {\r\n\r\n    const postView = postList.map((p) => {\r\n        return <PostPreview key = {p.id}\r\n                            post = {p}\r\n                            />\r\n    })\r\n\r\n    return (\r\n        <div style = {{marginLeft: \"15%\", marginRight: \"15%\", marginBottom: \"10%\", marginTop: \"3%\"}}>\r\n            {postView}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\r\nimport {xonokai} from 'react-syntax-highlighter/dist/esm/styles/prism' // 1\r\nimport \"./PostView.css\";\r\n\r\nfunction formatDate(date) {\r\n    var d = new Date(date),\r\n        month = '' + (d.getMonth() + 1),\r\n        day = '' + d.getDate(),\r\n        hour = '' + d.getHours(),\r\n        minute = '' + d.getMinutes(),\r\n        second = '' + d.getSeconds();\r\n\r\n    if (month.length < 2) \r\n        month = '0' + month;\r\n    if (day.length < 2) \r\n        day = '0' + day;\r\n    if (hour.length < 2) \r\n        hour = '0' + hour;\r\n    if (minute.length < 2) \r\n        minute = '0' + minute;\r\n    if (second.length < 2) \r\n        second = '0' + second;\r\n\r\n    return `${month}-${day} ${hour}:${minute}:${second}`;\r\n}\r\nconst renderers = {\r\n    code: ({language, value}) => {\r\n      return <SyntaxHighlighter style={xonokai} language= {language} children={value} />\r\n    }\r\n}\r\n\r\nexport const PostView = ({post, onPostDelete}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className = \"postView-container\">\r\n            <h1 className = \"postView-title\">{post.title}</h1>\r\n            <div className = \"postView-info-container\">\r\n                <div>\r\n                    <small>{post.id}</small>\r\n                    <small>&nbsp;&nbsp;&nbsp;</small>\r\n                    <small>{formatDate(post.createdAt)}</small> \r\n                </div>\r\n                <div style = {{justifySelf: \"flex-end\"}}>\r\n                    <span onClick = {() => {history.push(`/write?id=${post.id}`)}} style = {{cursor: \"pointer\"}}>수정</span>\r\n                    <small>&nbsp;&nbsp;&nbsp;</small>\r\n                    <span onClick = {() => {onPostDelete(post); alert(\"삭제되었습니다.\")}} style = {{cursor: \"pointer\"}}>삭제</span>\r\n                </div>\r\n            </div>\r\n            <div className = \"postView-body\">\r\n                <ReactMarkdown renderers={renderers}>{post.body}</ReactMarkdown>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\r\nimport {\r\n  Route, useLocation,\r\n} from \"react-router-dom\";\r\n\r\nimport {Header} from \"./components/Header\"\r\nimport {FireworkCanvas} from \"./routes/FireworkCanvas\";\r\nimport { Home } from './routes/Home';\r\nimport { Write } from './routes/Write';\r\nimport { PostList } from './routes/PostList';\r\nimport { useState } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { PostView } from './routes/PostView';\r\n\r\nexport default function App() {\r\n  const history = useHistory();\r\n  // const [postList, setPostList] = useState(\r\n  //   [...Array(3).keys()].map((n) => {\r\n  //     return {title: \"sample title\" + n, body: \"sample body\" + n};\r\n  //   })\r\n  // )\r\n  const [postList, setPostList] = useState(\r\n    [{id: 0,\r\n      title: \"SampleTitle\",\r\n    body: String.raw`**Hello world!!!**\r\n# 제목1\r\n1. 1번\r\n2. 2번\r\n3. 3번\r\n## 제목2\r\n- 하나\r\n- 둘\r\n- 셋\r\n${\"```\"}cpp\r\n#include <iostream>\r\nusing namespace std;\r\nint main() {\r\n  cout << \"hello, world\\n\";\r\n}\r\n${\"```\"}\r\n\r\n*Italic*\r\n> Blockquote\r\n\r\n`,\r\ncreatedAt: Date.now()\r\n  }]\r\n  )\r\n  const onPostWrite = (p) => {\r\n    if (postList.length !== 0) {\r\n      p.id = postList[postList.length - 1].id + 1;\r\n    } else {\r\n      p.id = 0;\r\n    }\r\n    setPostList([...postList, p]);\r\n    history.push(\"/post\");\r\n  }\r\n\r\n  const onPostUpdate = (p) => {\r\n    const newPostList = postList.map((post) => {\r\n      if (post.id === p.id) {\r\n        return {...post, title: p.title, body: p.body};\r\n      } else {\r\n        return post;\r\n      }\r\n    })\r\n\r\n    setPostList(newPostList);\r\n  }\r\n\r\n  const onPostDelete = (p) => {\r\n    setPostList(postList.filter(post => post.id !== p.id));\r\n    history.push(\"/post\");\r\n  }\r\n\r\n  const findPostIdx = (id) => {\r\n    for (let idx in postList) {\r\n      if (postList[idx].id === id) {\r\n        return idx;\r\n      }\r\n    }\r\n  }\r\n\r\n  const getPost = (id) => {\r\n    for (let idx in postList) {\r\n      if (postList[idx].id === id) {\r\n        return idx;\r\n      }\r\n    }\r\n  }\r\n\r\n  function useQuery() {\r\n    return new URLSearchParams(useLocation().search);\r\n  }\r\n\r\n  let query = useQuery();\r\n\r\n  return (\r\n    <div>\r\n      <Header/>\r\n      <Route\r\n        exact\r\n        path='/'\r\n        render={() => <Home/>}\r\n        />\r\n      <Route\r\n        path='/canvas'\r\n        render={() => <FireworkCanvas/>}\r\n      />\r\n      <Route\r\n        path='/write'\r\n        render = {() => {\r\n          let id = query.get(\"id\");\r\n          if (id) {\r\n            return <Write post = {postList[findPostIdx(Number(id))]} onPostUpdate = {onPostUpdate}/>\r\n          } else {\r\n            return <Write onPostWrite = {onPostWrite}/>\r\n          }\r\n        }}\r\n        />\r\n      <Route\r\n        exact\r\n        path='/post'\r\n        render={() => <PostList postList = {[].concat(postList).reverse()}/>}\r\n        />\r\n      <Route\r\n        path='/post/:id'\r\n        render={({ match }) => (\r\n            <PostView\r\n                post = {postList[findPostIdx(Number(match.params.id))]}\r\n                onPostDelete = {onPostDelete}\r\n            />\r\n        )}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter as Router,\r\n} from \"react-router-dom\";\r\n\r\n// import { Provider } from 'react-redux'\r\n// import store from './redux/store'\r\n\r\n// ReactDOM.render(\r\n//     <Provider store={store}>\r\n//       <App />\r\n//     </Provider>, \r\n//   document.getElementById('root')\r\n// );\r\nReactDOM.render(\r\n  <Router basename=\"/forum-renewal\">\r\n      <App />\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}